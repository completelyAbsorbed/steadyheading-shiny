runApp('C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/in-development')
source("C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/in-development/scrape_rates.R", echo=TRUE)
library(tidyr)
library(rvest)
webpage_h15 <- "https://www.federalreserve.gov/releases/h15/"
selector_date <- ".date" # //*[contains(concat( " ", @class, " " ), concat( " ", "dates", " " ))]
html_h15 <- read_html(webpage_h15)
html_elements(selector_date)
library(tidyverse)
library(rvest)
webpage_h15 <- "https://www.federalreserve.gov/releases/h15/"
selector_date <- ".date" # //*[contains(concat( " ", @class, " " ), concat( " ", "dates", " " ))]
html_h15 <- read_html(webpage_h15)
html_h15 |> html_elements(selector_date)
source("C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/in-development/scrape_rates.R", echo=TRUE)
version
library(installR)
install.packages("installr")
library(installr)
updateR()
version
################################################################################
#                                                                              #
# load_fed_rates.R                                                             #
#                                                                              #
#   loads, formats, and updates various interest rate series                   #
#                                                                              #
################################################################################
################################################################################
#                                                                              #
# define constants                                                             #
#                                                                              #
################################################################################
names_fed_rates <- c("Date",
"1-month",
"3-month",
"6-month",
"1-year",
"2-year",
"3-year",
"5-year",
"7-year",
"10-year",
"20-year",
"30-year")
first_five <- c("Unit:", # our assumption of the first five values in the Date column before fixing
"Multiplier:",
"Currency:",
"Unique Identifier:",
"Time Period")
################################################################################
#                                                                              #
# library() calls                                                              #
#                                                                              #
################################################################################
################################################################################
#                                                                              #
# function definitions                                                         #
#                                                                              #
################################################################################
load_fed_rates_raw_from_fed <- function(filepath){
# load the fed rates raw from the FED, and fix up the formats
fed_rates <- read.csv(filepath)
# data is in the format of Market Yield on US Treasury securities at <colname>
# ... constant maturity, quoted on investment basis
# fix the column names
names(fed_rates) <- names_fed_rates
if(!(sum(fed_rates$Date[1:5] == first_five) == 5)){
# do nothing, our assumption about the first five rows being off is erroneous
print("a raw file wasn't fed to load_fed_rates_raw_from_fed()")
}else{
# remove the first five rows, as they aren't relevant to our concerns
fed_rates <- fed_rates[-1*(1:5),]
head(fed_rates)
return(fed_rates)
}
return(fed_rates)
}
write_fed_rates <- function(fed_rates,
separate_ND_flag = TRUE,
path,
filename){
# if the separate_ND_flag is TRUE, separate out rows with all ND and write as a separate .DATASAVE
# to make our lives easier, first convert all ND to ""
if(separate_ND_flag){
fed_rates[fed_rates == "ND"] <- ""
empty_which <- fed_rates == ""
empty_which_rowSums <- rowSums(empty_which)
width <- dim(fed_rates)[2] - 1 # the number of maturities
remove_rows <- empty_which_rowSums == width
fed_rates <- fed_rates[which(!remove_rows),]
}
# write out the fed_rates dataframe as an object file .DATASAVE
save(fed_rates,
file = paste(path,
"/",
filename,
".DATASAVE"))
}
prepare_for_plotting <- function(fed_rates){
# converts maturity columns to a single column and returns a dataframe ready for ggplot2
dates <- fed_rates$Date # save the dates
rates <- fed_rates[,-1] # lop dates off of fed_rates
rates_stack <- stack(rates) # turns maturities into a factor column, "ind"
rates_prepared <- data.frame(dates,
rates_stack[,1],
rates_stack[,2])
names(rates_prepared) <- c("Date",
"Interest",
"Maturity")
return(rates_prepared)
}
# define the filepath for the working directory
directory_working <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development"
# set the working directory
setwd(directory_working)
# define the filepath for fed rates
filepath_fed_rates <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development/data/FRB_H15.csv"
# load the fed rates
source("load_fed_rates.R")
# define the filepath for fed rates
filepath_fed_rates <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development/data/FRB_H15.csv"
# source the fed rates loading and transforming helper file
source("load_fed_rates.R")
# load the fed rates, prepared for plotting
rates_prepared <- filepath_fed_rates |>
load_fed_rates_raw_from_fed() |>
prepare_for_plotting()
start_date <- "2022-01-01"
rates_prepared
head(rates_prepared)
tail(rates_prepared)
start_date <- "2022-01-01"
recent <- rates_prepared[which(rates_prepared$Date >=
start_date),]
# constants to automate/reactify
interest_minimum <- 0
interest_maximum <- ceiling(max(recent$Interest))
interest_by <- 0.125
datebreaks <- seq(as.Date(start_date), # https://r-graphics.org/recipe-axes-axis-date
as.Date("2023-06-01"),
by = "1 month")
interestbreaks <- seq(interest_minimum,
interest_maximum,
by = interest_by)
ceiling(max(recent$Interest))
# define the filepath for the working directory
directory_working <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development"
# set the working directory
setwd(directory_working)
# define the filepath for fed rates
filepath_fed_rates <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development/data/FRB_H15.csv"
# source the fed rates loading and transforming helper file
source("load_fed_rates.R")
# define the filepath for the working directory
directory_working <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development"
# set the working directory
setwd(directory_working)
# define the filepath for fed rates
filepath_fed_rates <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development/data/FRB_H15.csv"
# source the fed rates loading and transforming helper file
source("load_fed_rates.R")
# load the fed rates, prepare for plotting
rates_prepared <- filepath_fed_rates |>
load_fed_rates_raw_from_fed() |>
prepare_for_plotting()
head(rates_prepared)
tail(rates_prepared)
start_date <- "2022-01-01"
recent <- rates_prepared[which(rates_prepared$Date >=
start_date),]
# constants to automate/reactify
interest_minimum <- 0
interest_maximum <- ceiling(max(recent$Interest))
ceiling(max(recent$Interest))
interest_maximum <- recent$Interest |> max(na.rm = TRUE) |> ceiling()
# define the filepath for the working directory
directory_working <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development"
# set the working directory
setwd(directory_working)
# define the filepath for fed rates
filepath_fed_rates <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development/data/FRB_H15.csv"
# source the fed rates loading and transforming helper file
source("load_fed_rates.R")
# load the fed rates, prepare for plotting
rates_prepared <- filepath_fed_rates |>
load_fed_rates_raw_from_fed() |>
prepare_for_plotting(flag_replace_NA = FALSE)
head(rates_prepared)
tail(rates_prepared)
start_date <- "2022-01-01"
recent <- rates_prepared[which(rates_prepared$Date >=
start_date),]
# constants to automate/reactify
interest_minimum <- 0
interest_maximum <- recent$Interest |> max(na.rm = TRUE) |> ceiling()
interest_by <- 0.125
datebreaks <- seq(as.Date(start_date), # https://r-graphics.org/recipe-axes-axis-date
as.Date("2023-06-01"),
by = "1 month")
interestbreaks <- seq(interest_minimum,
interest_maximum,
by = interest_by)
filter_maturity <- c("1-month",
"3-month",
"6-month",
"1-year")
recent_filtered <- recent[which(recent$Maturity %in% filter_maturity),]
ggplot(data = recent_filtered,
mapping = aes(x = Date,
y = Interest,
color = Maturity,
group = Maturity)) +
geom_line() +
scale_x_date(breaks = datebreaks) +
scale_y_continuous(breaks = interestbreaks,
limits = c(interest_minimum,
interest_maximum))
interest_maximum
library(ggplot2)
# define the filepath for the working directory
directory_working <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development"
# set the working directory
setwd(directory_working)
# define the filepath for fed rates
filepath_fed_rates <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development/data/FRB_H15.csv"
# source the fed rates loading and transforming helper file
source("load_fed_rates.R")
# load the fed rates, prepare for plotting
rates_prepared <- filepath_fed_rates |>
load_fed_rates_raw_from_fed() |>
prepare_for_plotting(flag_replace_NA = FALSE)
head(rates_prepared)
tail(rates_prepared)
start_date <- "2022-01-01"
recent <- rates_prepared[which(rates_prepared$Date >=
start_date),]
# constants to automate/reactify
interest_minimum <- 0
interest_maximum <- recent$Interest |> max(na.rm = TRUE) |> ceiling()
interest_by <- 0.125
datebreaks <- seq(as.Date(start_date), # https://r-graphics.org/recipe-axes-axis-date
as.Date("2023-06-01"),
by = "1 month")
interestbreaks <- seq(interest_minimum,
interest_maximum,
by = interest_by)
filter_maturity <- c("1-month",
"3-month",
"6-month",
"1-year")
recent_filtered <- recent[which(recent$Maturity %in% filter_maturity),]
ggplot(data = recent_filtered,
mapping = aes(x = Date,
y = Interest,
color = Maturity,
group = Maturity)) +
geom_line() +
scale_x_date(breaks = datebreaks) +
scale_y_continuous(breaks = interestbreaks,
limits = c(interest_minimum,
interest_maximum))
maturities <- unique(recent$Maturity)
maturities
filter_maturity
maturities %in% filter_maturity
head(rates_prepared)
tail(rates_prepared)
head(recent)
tail(recent)
summary(recent)
summary(na.rm(recent))
################################################################################
#                                                                              #
# library() calls                                                              #
#                                                                              #
################################################################################
library(tidyverse)
library(ggplot2)
# define the filepath for the working directory
directory_working <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development"
# set the working directory
setwd(directory_working)
# define the filepath for fed rates
filepath_fed_rates <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development/data/FRB_H15.csv"
# source the fed rates loading and transforming helper file
source("load_fed_rates.R")
# load the fed rates, prepare for plotting
rates_prepared <- filepath_fed_rates |>
load_fed_rates_raw_from_fed() |>
prepare_for_plotting(flag_replace_NA = FALSE)
head(rates_prepared)
tail(rates_prepared)
start_date <- "2022-01-01"
recent <- rates_prepared[which(rates_prepared$Date >=
start_date),]
head(recent)
tail(recent)
summary(recent)
# constants to automate/reactify
interest_minimum <- 0
interest_maximum <- recent$Interest |> max(na.rm = TRUE) |> ceiling()
interest_by <- 0.125
datebreaks <- seq(as.Date(start_date), # https://r-graphics.org/recipe-axes-axis-date
as.Date("2023-06-01"),
by = "1 month")
interestbreaks <- seq(interest_minimum,
interest_maximum,
by = interest_by)
filter_maturity <- c("1-month",
"3-month",
"6-month",
"1-year")
recent_filtered <- recent[which(recent$Maturity %in% filter_maturity),]
ggplot(data = recent_filtered,
mapping = aes(x = Date,
y = Interest,
color = Maturity,
group = Maturity)) +
geom_line() +
scale_x_date(breaks = datebreaks) +
scale_y_continuous(breaks = interestbreaks,
limits = c(interest_minimum,
interest_maximum))
maturities <- unique(recent$Maturity)
maturities
filter_maturity
maturities %in% filter_maturity
recent_filtered
datebreaks
interestbreaks
recent$Maturity
filter_maturity
library(ggplot2)
# define the filepath for the working directory
directory_working <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development"
# set the working directory
setwd(directory_working)
# define the filepath for fed rates
filepath_fed_rates <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development/data/FRB_H15.csv"
# source the fed rates loading and transforming helper file
source("load_fed_rates.R")
# load the fed rates, prepare for plotting
rates_prepared <- filepath_fed_rates |>
load_fed_rates_raw_from_fed() |>
prepare_for_plotting(flag_replace_NA = FALSE)
head(rates_prepared)
tail(rates_prepared)
start_date <- "2022-01-01"
recent <- rates_prepared[which(rates_prepared$Date >=
start_date),]
head(recent)
tail(recent)
summary(recent)
# constants to automate/reactify
interest_minimum <- 0
interest_maximum <- recent$Interest |> max(na.rm = TRUE) |> ceiling()
interest_by <- 0.125
datebreaks <- seq(as.Date(start_date), # https://r-graphics.org/recipe-axes-axis-date
as.Date("2023-06-01"),
by = "1 month")
interestbreaks <- seq(interest_minimum,
interest_maximum,
by = interest_by)
filter_maturity <- c("1-month",
"3-month",
"6-month",
"1-year")
recent_filtered <- recent[which(recent$Maturity %in% filter_maturity),]
ggplot(data = recent_filtered,
mapping = aes(x = Date,
y = Interest,
color = Maturity,
group = Maturity)) +
geom_line() +
scale_x_date(breaks = datebreaks) +
scale_y_continuous(breaks = interestbreaks,
limits = c(interest_minimum,
interest_maximum))
maturities <- unique(recent$Maturity)
maturities
filter_maturity
maturities %in% filter_maturity
library(shiny)
source("fed_plot.R")
# Define UI for random distribution app ----
user_interface <- fluidPage(
# App title ----
titlePanel("Liz Young - Public Portfolio"),
# Sidebar panel ----
sidebarPanel(
h3("This Page"),
p("steadyheading.com is a Shiny app I wrote in R and Shiny to illustrate some of my analysis, programming, and visualization skills."),
br(),
h3("About Me"),
p("I'm a data science nerd, expert in R, Shiny, Excel, and VBA. Open to full-time, contract-to-hire, and freelance project work."),
br(),
p("Experienced with - Analysis, Visualization, Business Communication, Machine Learning, SQL, SAS, Python, APL, Random Forests, XGBoost, Regression, Financial Data, Claims Data, ETL, Automation, Scraping, Loss Reserving, Property & Casualty Data, Workers Compensation, and more!"),
br(),
p("<<< link to youtube demo here >>>"),
br(),
h3("Get in Touch"),
p("email : liz -at- completelyabsorbed -dot- com"),
p("LinkedIn : <link>")
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Tabset ----
tabsetPanel(type = "tabs",
tabPanel("About",
img(src = "liz.jpg",
width = 400),
img(src = "polynomial.jpg",
width = 400),
br(),
br(),
p("I like spending time in nature. My cat, Polynomial is a sweet guy.")),
tabPanel("Fed Rates",
plotOutput("plot_fed_rates")),
tabPanel("Weather"),
tabPanel("Excel")
)
)
)
# Define server logic
server_logic <- function(input,
output) {
output$plot_fed_rates <- renderPlot()
}
# run the app
shinyApp(ui = user_interface,
server = server_logic)
runApp()
runApp()
library(ggplot2)
# define the filepath for the working directory
directory_working <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development"
# set the working directory
setwd(directory_working)
# define the filepath for fed rates
filepath_fed_rates <- "C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development/data/FRB_H15.csv"
# source the fed rates loading and transforming helper file
source("load_fed_rates.R")
# load the fed rates, prepare for plotting
rates_prepared <- filepath_fed_rates |>
load_fed_rates_raw_from_fed() |>
prepare_for_plotting(flag_replace_NA = FALSE)
head(rates_prepared)
tail(rates_prepared)
start_date <- "2022-01-01"
recent <- rates_prepared[which(rates_prepared$Date >=
start_date),]
head(recent)
tail(recent)
summary(recent)
# constants to automate/reactify
interest_minimum <- 0
interest_maximum <- recent$Interest |> max(na.rm = TRUE) |> ceiling()
interest_by <- 0.125
datebreaks <- seq(as.Date(start_date), # https://r-graphics.org/recipe-axes-axis-date
as.Date("2023-06-01"),
by = "1 month")
interestbreaks <- seq(interest_minimum,
interest_maximum,
by = interest_by)
filter_maturity <- c("1-month",
"3-month",
"6-month",
"1-year")
recent_filtered <- recent[which(recent$Maturity %in% filter_maturity),]
plot_rates <- ggplot(data = recent_filtered,
mapping = aes(x = Date,
y = Interest,
color = Maturity,
group = Maturity)) +
geom_line() +
scale_x_date(breaks = datebreaks) +
scale_y_continuous(breaks = interestbreaks,
limits = c(interest_minimum,
interest_maximum))
maturities <- unique(recent$Maturity)
maturities
filter_maturity
maturities %in% filter_maturity
plot_rates
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?splitLayout
runApp()
which(c(T,T,F,F,T,F,F,T))
runApp()
runApp()
runApp()
runApp()
runApp()
?seq
runApp()
runApp()
runApp()
runApp()
runApp()
source("C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development/fed_plot.R", echo=TRUE)
source("C:/Users/liz/iCloudDrive/code/shiny/dashboards/public/steadyheading-shiny/in-development/fed_plot.R", echo=TRUE)
runApp()
